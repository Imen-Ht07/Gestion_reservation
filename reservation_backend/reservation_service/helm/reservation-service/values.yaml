replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

image:
  repository: imenht/reservation_service
  pullPolicy: IfNotPresent
  tag: "latest"

service:
  type: ClusterIP
  port: 3002
  targetPort: 3002
  name: reservation-service

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: reservation-service.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"

podLabels: {}

imagePullSecrets: []

serviceAccount:
  create: true
  name: ""

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 3000
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /health
    port: 3002
  initialDelaySeconds: 15
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: 3002
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

volumeMounts: []
volumes: []

nodeSelector: {}
tolerations: []
affinity: []
