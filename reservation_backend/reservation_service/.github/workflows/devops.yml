name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: reservation-service

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest ./reservation_service

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./reservation_service
        run: npm install

      - name: Run lint
        working-directory: ./reservation_service
        run: npm run lint

      - name: Run tests
        working-directory: ./reservation_service
        run: npm test
      - name: Slack Notification on Success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Le build et push de *historique-service* a réussi sur la branche *main* !"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack Notification on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Le pipeline CI/CD de *historique-service* a échoué sur *main*. Consultez les logs pour plus de détails !"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}